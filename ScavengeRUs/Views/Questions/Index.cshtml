@model IEnumerable<ScavengeRUs.Models.Entities.Location>

@{
    ViewData["Title"] = "Questions";
}

<script>
    function getLocation() {
        var elem = document.getElementById('geolocation');
        elem.innerHTML = 'text here';

        var geoapi = navigator.geolocation;
        if (geoapi === undefined) {
            elem.innerHTML = 'no geolocation';
            return null;
        } else {
            // ASYNC geoapi.getCurrentPosition(callWithLocationSuccess,callWithLocationFailure,{enableHighAccuracy:true});
            function callWithLocationSuccess(gpLocation) {
                var coords = gpLocation.coords;
                elem.innerHTML = 'You are at <br>';
                elem.innerHTML += 'Latitude: ' + (coords.latitude) + '<br>';
                elem.innerHTML += 'Longitude: ' + (coords.longitude) + '<br>';
                elem.innerHTML += 'Altitude: ' + (coords.altitude) + '<br>';
                elem.innerHTML += 'Accuracy: ' + (coords.accuracy) + ' metres <br>';
                elem.innerHTML += 'Alt. Accuracy: ' + (coords.altitudeAccuracy) + ' metres <br>';
                elem.innerHTML += 'Heading: ' + (coords.heading) + ' degrees <br>';
                elem.innerHTML += 'Speed: ' + (coords.speed) + ' metres per second <br>';
            }

            function callWithLocationFailure(gpError) {
                elem.innerHTML = 'location error';
            }

            geoapi.getCurrentPosition(callWithLocationSuccess, callWithLocationFailure, { enableHighAccuracy: true });
        }
    }

    setTimeout(getLocation,0);
</script>

<h1>Where am I?</h1>

<p id="geolocation">Unknown</p>

<h1>Hunt</h1>

@foreach(var item in Model)
{
    <br />
    <h4>
        @Html.DisplayFor(modelItem => item.Place)
    </h4>
    <p>
        @Html.DisplayFor(modelItem => item.Task)
    </p>
}
